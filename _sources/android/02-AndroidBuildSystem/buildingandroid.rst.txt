02-AndroidBuildSystem - Building Android
===========================================
Building Android involves 3 steps. 

- Setting Environment for Build System
- Select the Target Hardware through Lunch Command
- Start Build

The first step to build Android involves setting up the environment. 
The script contains the necessary functions that will help you select 
what kind of build you want to do. Command ``source build/envsetup.sh`` is 
called on the root directory of AOSP.

Next step is to select the target device for which build system builds 
to. It is done using the command ``lunch``. It is returned with a prompt 
of different products and variants with a serial number. Developer 
usually selects the corresponding serial number. Once it is done, the 
build system is ready with configurations for the selected product/hardware.

The final step to build the complete AOSP is done using the command ``make`` 
or ``make all``. The build system starts to build Android for the selected 
Hardware. Build completion is directly dependent on the speed of the machine. 
Build system can be run on parallel threads/cores using the 
argument ``-j2/4/8/16/32``. It might increase the build speed, but might affect 
other operations while the build is running. The final output of the build 
is generated under directory ``out/target/product/..``

To build CTS or Compatibility Test Suite, the ``make cts`` command is used.

During the build the developer might see issues related to API. In such 
cases ``make update-api`` is used. This updates the API level from what was 
configured earlier.

Once the build is done, developers can flash the device using tools such 
as fastboot. After flashing is done it is not necessary to update the 
complete device to test the changes in a particular module. Developers 
can navigate to the root directory of the module, where Android bp files 
exist and can invoke 'mm' command. This builds only that module. After 
build is complete, the binary can be found under ``out/target/product/..``. 
The changes can be pushed to device by command ``adb sync``.

Useful Commands
----------------

Following were the commands that were discussed in the current topic: 

.. code-block:: shell

    $ source build/envsetup.sh
    $ lunch
    $ make
    $ mm
    $ adb sync
    $ make cts
    $ make update-api




 
